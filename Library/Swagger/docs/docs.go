// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/check-email/{email}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `putra@ssss.com` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Employee Check Email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/check-employee-id/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `1` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Employee Check ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/check-mobile-phone-number/{mobilePhoneNumber}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `082134567890` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Employee Check Mobile Phone Number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mobilePhoneNo",
                        "name": "mobilePhoneNo",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/dapr-state/{stateStore}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sample"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "stateStore",
                        "name": "stateStore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/dapr-state/{stateStore}/{key}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sample"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "stateStore",
                        "name": "stateStore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sample"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "stateStore",
                        "name": "stateStore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/dashboards/employee/length-of-work/{numberOfYear}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboards"
                ],
                "summary": "TotalEmployeeByLengthOfWork",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "numberOfYear",
                        "name": "numberOfYear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/dashboards/employee/new": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboards"
                ],
                "summary": "NewEmployeeData",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/dashboards/employee/religion/summary": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboards"
                ],
                "summary": "TotalReligionSummary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/dashboards/employee/work-status/summary": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboards"
                ],
                "summary": "TotalWorkStatusSummary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/dashboards/employee/work-status/will-expire/summary": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboards"
                ],
                "summary": "TotalWillExpireEmployeeContract",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employee": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `?search=wijaya` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "EmployeeSearch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Payload: ` + "`" + `{\"code\":\"12345.67890\",\"type\":\"-\",\"fingerPrintId\":\"100200300\",\"faceId\":\"50264525\",\"machineId\":11884632,\"MachineName\":\"Mesin\",\"departmentId\":196347512,\"departmentName\":\"deptName\",\"sectionId\":1,\"sectionName\":\"sectName\",\"positionId\":1,\"positionName\":\"potiName\",\"companyId\":1,\"companyName\":\"CompnName\",\"locationId\":1,\"locationName\":\"LocName\",\"companyLocationId\":1,\"companyLocationCode\":\"SSSS\",\"parent\":61,\"parentName\":\"Juliana\",\"identityNo\":\"1271000524163\",\"drivingLicenseNo\":\"150404020603\",\"npwpNo\":\"0\",\"name\":\"Staff\",\"placeOfBirth\":\"Medan\",\"dateOfBirth\":\"1990-02-10T07:48:48.243Z\",\"email\":\"test@ssss.com\",\"address\":\"Jalan Veteran\",\"temporaryAddress\":\"Jalan Veteran\",\"neighbourHoodWardNo\":\"1020\",\"urbanName\":\"Medan\",\"subDistrictName\":\"Medan Timur\",\"religion\":\"Buddha\",\"maritalStatus\":\"Divorced\",\"citizen\":\"Indonesia\",\"gender\":\"Male\",\"ethnic\":\"-\",\"mobilePhoneNo\":\"0821789456\",\"phoneNo\":\"0821789456\",\"shirtSize\":\"XL\",\"pantSize\":30,\"shoeSize\":40,\"joinDate\":\"2022-02-10T07:48:48.243Z\",\"resignDate\":null,\"resignReason\":null,\"bank\":\"Mandiri\",\"bankAccountNo\":\"1006001890\",\"bankAccountName\":\"Test\",\"familyMobilePhoneNo\":\"555666999\",\"workStatus\":\"Kontrak\",\"profilePhoto\":\"/Img/test\",\"contractStart\":\"2022-02-10T07:48:48.243Z\",\"contractEnd\":\"2022-05-10T07:48:48.243Z\",\"bpjsNo\":\"0\",\"jamsostekNo\":\"0\",\"jamsostekType\":\"-\",\"jamsostekBalance\":0,\"familyCardNo\":\"0\",\"activeStatus\":true,\"extension\":\"123456\",\"whatsapp\":\"082189890\",\"instagram\":\"@instagram\",\"twitter\":\"@twitter\",\"gmail\":\"@gmail\",\"facebook\":\"@facebook\"}` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "EmployeeAdded",
                "parameters": [
                    {
                        "description": "Example Payload",
                        "name": "\"payload\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dto.EmployeeDataDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `?sortColumn=code\u0026sortOrder=desc\u0026pageSize=10\u0026pageNumber=1\u0026code=111222333\u0026name=staff` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "EmployeeBrowse",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sortColumn",
                        "name": "sortColumn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sortOrder",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageNumber",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "machineId",
                        "name": "machineId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "companyName",
                        "name": "companyName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "companyLocationCode",
                        "name": "companyLocationCode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "departmentName",
                        "name": "departmentName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "workStatus",
                        "name": "workStatus",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/{id_parent}/subordinates/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `/2/subordinates/9` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "DetailSubordinatesData",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ParentID",
                        "name": "id_parent",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `3` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "EmployeeBrowseDetail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Payload: ` + "`" + `{\"parent\":2,\"identityNo\":\"15246352\",\"drivingLicenseNo\":\"584967222\",\"npwpNo\":\"78995525\",\"name\":\"Cris Jhon\",\"placeOfBirth\":\"Jakarta\",\"dateOfBirth\":\"2000-03-10T07:48:48.243Z\",\"email\":\"crhis@email.com\",\"address\":\"Jalan Buku\",\"temporaryAddress\":\"Jalan Buku\",\"neighbourHoodWardNo\":\"12345\",\"urbanName\":\"Medan\",\"subDistrictName\":\"Marelan\",\"religion\":\"Atheis\",\"maritalStatus\":\"Married\",\"citizen\":\"Medan\",\"gender\":\"Pria\",\"ethnic\":\"ethnic\",\"mobilePhoneNo\":\"082134566\",\"phoneNo\":\"098765465\",\"shirtSize\":\"L\",\"pantSize\":10,\"shoeSize\":10,\"bank\":\"BCA\",\"bankAccountNo\":\"150505002\",\"bankAccountName\":\"Chris Jhon\",\"familyMobilePhoneNo\":\"082134567673\",\"bpjsNo\":\"123455\",\"jamsostekNo\":\"1234567890\",\"jamsostekType\":\"Kelas 1\",\"jamsostekBalance\":20000,\"familyCardNo\":\"241231\",\"extension\":\"-\",\"licenseType\":\"-\",\"whatsapp\":\"0821898901\",\"instagram\":\"@instagramm\",\"twitter\":\"@twitterr\",\"gmail\":\"@gmaill\",\"facebook\":\"@facebookk\"}` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "EmployeePersonalInfoUpdated",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Example Payload",
                        "name": "\"payload\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dto.EmployeeUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "EmployeeDeleted",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/{id}/faceid": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Payload: ` + "`" + `{\"faceId\":\"3211\",\"machineId\":3212}` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Update Face Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Example Payload",
                        "name": "\"payload\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dto.FaceIdUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/{id}/fingerprint": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Payload: ` + "`" + `{\"FingerPrintId\":\"Update FingerPrintId\",\"FaceId\":\"Update FaceId\",\"MachineId\":10}` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "EmployeeFingerUpdated",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Example Payload",
                        "name": "\"payload\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dto.FingerprintUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/{id}/head": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `?transaction=leave` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "EmployeeGetHead",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "permission",
                            "leave",
                            "business-trip",
                            "change-schedulue",
                            "job-vacancy-request",
                            "overtimes"
                        ],
                        "type": "string",
                        "description": "transaction",
                        "name": "transaction",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/{id}/machineid": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Payload: ` + "`" + `{\"MachineId\":666}` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Update Machine Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Example Payload",
                        "name": "\"payload\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dto.MachineIdUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/{id}/read-photo": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `3` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Employee Upload Photo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/{id}/resign": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Payload: ` + "`" + `{\"WorkStatus\":\"Resign\",\"ResignDate\":\"2022-03-12T07:48:48.243Z\",\"ResignReason\":\"Pindah Kota\"}` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "EmployeeResigned",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Example Payload",
                        "name": "\"payload\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dto.ResignStatusUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/{id}/subordinates": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `?name=asis\u0026workStatus=Active\u0026code=10.0003` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "SubordinatesData",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "workStatus",
                        "name": "workStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/{id}/upload-photo": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `3` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Employee Upload Photo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file Photo",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/employees/{id}/workstatus": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Payload: ` + "`" + `{\"WorkStatus\" : \"Karyawan Tetap\",\"ContractStart\" : \"2022-05-11T07:48:48.243Z\",\"ContractEnd\" : \"2022-12-10T07:48:48.243Z\",\"WorkStatusChangeReason\" : \"alasan\",\"WorkStatusChangeDate\" : \"2022-12-10T07:48:48.243Z\"}` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Employee Work Status Updated (Training, Kontrak, Karyawan Tetap, Mitra Kerja, Resign)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Example Payload",
                        "name": "\"payload\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dto.WorkStatusUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/leave-balance": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `?sortColumn=id\u0026sortOrder=desc\u0026pageSize=20?companyName=com\u0026locationName=loc\u0026departmentName=dept` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Balance"
                ],
                "summary": "Show Leave Balance Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sortColumn",
                        "name": "sortColumn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sortOrder",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageNumber",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "companyName",
                        "name": "companyName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "locationName",
                        "name": "locationName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "departmentName",
                        "name": "departmentName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Payload: ` + "`" + `{\"employeeId\": 36,\"employeeCode\":\"10.0001\",\"startDate\":\"2022-02-10T07:48:48.243Z\",\"endDate\":\"2022-02-10T07:48:48.243Z\",\"type\":\"increase\",\"quantity\": 5,\"reason\":\"Potongan Cuti 15 Hari\"}` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Balance"
                ],
                "summary": "Create Leave Balance Adjusment",
                "parameters": [
                    {
                        "description": "Example Payload",
                        "name": "\"payload\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dto.LeaveBalanceAdjustmentDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/leave-balance/policy": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Balance Policy"
                ],
                "summary": "Select All Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "companyName",
                        "name": "companyName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Payload: ` + "`" + `{\"companyId\":2,\"companyName\":\"PT. SSSS\",\"autoCutLeaveWeekly\":true,\"leaveBalanceAccumulation\":true,\"leaveBalanceBonusByLenghtOfWork\":true,\"leaveBalanceBonusList\":[{\"workingPeriodStart\":5,\"workingPeriodEnd\":15,\"reward\":5},{\"workingPeriodStart\":10,\"workingPeriodEnd\":15,\"reward\":5}]}` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Balance Policy"
                ],
                "summary": "Save Data",
                "parameters": [
                    {
                        "description": "Example Payload",
                        "name": "\"payload\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dto.LeaveBalancePolicyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/leave-balance/policy/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Payload: ` + "`" + `{\"autoCutLeaveWeekly\":false,\"leaveBalanceAccumulation\":false,\"leaveBalanceBonusByLenghtOfWork\":false,\"leaveBalanceBonusList\":[{\"workingPeriodStart\":10,\"workingPeriodEnd\":10,\"reward\":10},{\"workingPeriodStart\":11,\"workingPeriodEnd\":11,\"reward\":11}]}` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Balance Policy"
                ],
                "summary": "Update Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Example Payload",
                        "name": "\"payload\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dto.LeaveBalancePolicyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/leave-balance/reset-leave-balance": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Balance",
                    "Leave Balance"
                ],
                "summary": "Reset Leave Balance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/leave-balance/{employeeId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `2` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Balance"
                ],
                "summary": "Show Leave Balance Detail Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "employeeId",
                        "name": "employeeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/leave-balance/{employeeId}/{year}/history": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `123/2021` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leave Balance"
                ],
                "summary": "Show Leave Balance Adjustment Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "employeeId",
                        "name": "employeeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "year",
                        "name": "year",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sample"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/transfers": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `?sortColumn=id\u0026sortOrder=desc\u0026pageSize=0\u0026pageNumber=0\u0026employeeCode=empl\u0026transferCode=12` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfer"
                ],
                "summary": "TransferData",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sortColumn",
                        "name": "sortColumn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sortOrder",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageNumber",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "transferCode",
                        "name": "transferCode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "employeeCode",
                        "name": "employeeCode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "employeeName",
                        "name": "employeeName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Payload: ` + "`" + `{\"transferCode\":\"001\",\"transferDate\":\"2022-04-01T07:48:48.243Z\",\"employeeId\":2,\"employeeCode\":\"10.0002\",\"machineId\":1,\"machineName\":\"nama mesin\",\"fingerPrintId\":\"finger 1\",\"oldEmployeeCode\":\"000.0002\",\"oldCompanyName\":\"SSSS\",\"oldLocationName\":\"Medan\",\"oldDepartmentName\":\"Acconounting\",\"oldSectionName\":\"Bagian 1\",\"oldPositionName\":\"Staff IT\",\"oldCompanyLocationCode\":\"101010\",\"newEmployeeCode\":\"10.0002\",\"newCompanyName\":\"S4\",\"newLocationName\":\"Medan\",\"newDepartmentName\":\"MIS / IT\",\"newSectionName\":\"Bagian 3\",\"newPositionName\":\"Dev Ops\",\"newCompanyLocationCode\":\"10101010\",\"reason\":\"Reason\"}` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfer"
                ],
                "summary": "TransferCreate",
                "parameters": [
                    {
                        "description": "Example Payload",
                        "name": "\"payload\"",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Dto.TransferDataDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        },
        "/transfers/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sample Parameter: ` + "`" + `3` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfer"
                ],
                "summary": "TransferDetail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response.RespResultStruct"
                        }
                    },
                    "500": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/Response.RespErrorStruct"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Dto.BonusList": {
            "type": "object",
            "properties": {
                "reward": {
                    "type": "integer"
                },
                "workingPeriodEnd": {
                    "type": "integer"
                },
                "workingPeriodStart": {
                    "type": "integer"
                }
            }
        },
        "Dto.EmployeeDataDTO": {
            "type": "object",
            "required": [
                "companyId",
                "companyLocationAlias",
                "companyLocationCode",
                "companyLocationId",
                "companyName",
                "departmentId",
                "departmentName",
                "locationId",
                "locationName",
                "positionId",
                "positionName",
                "sectionId",
                "sectionName"
            ],
            "properties": {
                "activeStatus": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "bank": {
                    "type": "string"
                },
                "bankAccountName": {
                    "type": "string"
                },
                "bankAccountNo": {
                    "type": "string"
                },
                "bpjsNo": {
                    "type": "string"
                },
                "citizen": {
                    "type": "string"
                },
                "code": {
                    "type": "string",
                    "maxLength": 25
                },
                "companyId": {
                    "type": "integer"
                },
                "companyLocationAlias": {
                    "type": "string"
                },
                "companyLocationCode": {
                    "type": "string"
                },
                "companyLocationId": {
                    "type": "integer"
                },
                "companyName": {
                    "type": "string"
                },
                "contractEnd": {
                    "type": "string"
                },
                "contractStart": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "deletedBy": {
                    "type": "string"
                },
                "deletedTime": {
                    "type": "string"
                },
                "departmentId": {
                    "type": "integer"
                },
                "departmentName": {
                    "type": "string"
                },
                "drivingLicenseNo": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "ethnic": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "faceId": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "familyCardNo": {
                    "type": "string"
                },
                "familyMobilePhoneNo": {
                    "type": "string"
                },
                "fingerPrintId": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "gmail": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identityNo": {
                    "type": "string"
                },
                "instagram": {
                    "type": "string"
                },
                "jamsostekBalance": {
                    "type": "integer"
                },
                "jamsostekNo": {
                    "type": "string"
                },
                "jamsostekType": {
                    "type": "string"
                },
                "joinDate": {
                    "type": "string"
                },
                "licenseType": {
                    "type": "string"
                },
                "locationId": {
                    "type": "integer"
                },
                "locationName": {
                    "type": "string"
                },
                "machineId": {
                    "type": "integer"
                },
                "machineName": {
                    "type": "string"
                },
                "maritalStatus": {
                    "type": "string"
                },
                "mobilePhoneNo": {
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighbourHoodWardNo": {
                    "type": "string"
                },
                "npwpNo": {
                    "type": "string"
                },
                "pantSize": {
                    "type": "integer"
                },
                "parent": {
                    "type": "integer"
                },
                "parentName": {
                    "type": "string"
                },
                "phoneNo": {
                    "type": "string"
                },
                "placeOfBirth": {
                    "type": "string"
                },
                "positionId": {
                    "type": "integer"
                },
                "positionName": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "profilePhoto": {
                    "type": "string"
                },
                "religion": {
                    "type": "string"
                },
                "resignDate": {
                    "type": "string"
                },
                "resignReason": {
                    "type": "string"
                },
                "sectionId": {
                    "type": "integer"
                },
                "sectionName": {
                    "type": "string"
                },
                "shirtSize": {
                    "type": "string"
                },
                "shoeSize": {
                    "type": "integer"
                },
                "subDistrictName": {
                    "type": "string"
                },
                "temporaryAddress": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "urbanName": {
                    "type": "string"
                },
                "whatsapp": {
                    "type": "string"
                },
                "workStatus": {
                    "type": "string"
                },
                "workStatusChangeDate": {
                    "type": "string"
                },
                "workStatusChangeReason": {
                    "type": "string"
                }
            }
        },
        "Dto.EmployeeUpdateDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "bank": {
                    "type": "string"
                },
                "bankAccountName": {
                    "type": "string"
                },
                "bankAccountNo": {
                    "type": "string"
                },
                "bpjsNo": {
                    "type": "string"
                },
                "citizen": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "drivingLicenseNo": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "ethnic": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "facebook": {
                    "type": "string"
                },
                "familyCardNo": {
                    "type": "string"
                },
                "familyMobilePhoneNo": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "gmail": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identityNo": {
                    "type": "string"
                },
                "instagram": {
                    "type": "string"
                },
                "jamsostekBalance": {
                    "type": "integer"
                },
                "jamsostekNo": {
                    "type": "string"
                },
                "jamsostekType": {
                    "type": "string"
                },
                "licenseType": {
                    "type": "string"
                },
                "maritalStatus": {
                    "type": "string"
                },
                "mobilePhoneNo": {
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighbourHoodWardNo": {
                    "type": "string"
                },
                "npwpNo": {
                    "type": "string"
                },
                "pantSize": {
                    "type": "integer"
                },
                "parent": {
                    "type": "integer"
                },
                "phoneNo": {
                    "type": "string"
                },
                "placeOfBirth": {
                    "type": "string"
                },
                "religion": {
                    "type": "string"
                },
                "shirtSize": {
                    "type": "string"
                },
                "shoeSize": {
                    "type": "integer"
                },
                "subDistrictName": {
                    "type": "string"
                },
                "temporaryAddress": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "urbanName": {
                    "type": "string"
                },
                "whatsapp": {
                    "type": "string"
                }
            }
        },
        "Dto.FaceIdUpdateDTO": {
            "type": "object",
            "properties": {
                "faceId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "machineId": {
                    "type": "integer"
                }
            }
        },
        "Dto.FingerprintUpdateDTO": {
            "type": "object",
            "required": [
                "fingerPrintId"
            ],
            "properties": {
                "faceId": {
                    "type": "string"
                },
                "fingerPrintId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "machineId": {
                    "type": "integer"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedTime": {
                    "type": "string"
                }
            }
        },
        "Dto.LeaveBalanceAdjustmentDTO": {
            "type": "object",
            "required": [
                "employeeCode"
            ],
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "employeeCode": {
                    "type": "string",
                    "maxLength": 50
                },
                "employeeId": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "leaveId": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "tahun": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "Dto.LeaveBalancePolicyDTO": {
            "type": "object",
            "properties": {
                "autoCutLeaveWeekly": {
                    "type": "boolean"
                },
                "companyId": {
                    "type": "integer"
                },
                "companyName": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "leaveBalanceAccumulation": {
                    "type": "boolean"
                },
                "leaveBalanceBonusByLenghtOfWork": {
                    "type": "boolean"
                },
                "leaveBalanceBonusList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Dto.BonusList"
                    }
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedTime": {
                    "type": "string"
                }
            }
        },
        "Dto.MachineIdUpdateDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "machineId": {
                    "type": "integer"
                }
            }
        },
        "Dto.ResignStatusUpdateDTO": {
            "type": "object",
            "required": [
                "id",
                "workStatus"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "joinDate": {
                    "type": "string"
                },
                "resignDate": {
                    "type": "string"
                },
                "resignReason": {
                    "type": "string"
                },
                "workStatus": {
                    "type": "string"
                }
            }
        },
        "Dto.TransferDataDTO": {
            "type": "object",
            "required": [
                "employeeId",
                "fingerPrintId",
                "machineId",
                "machineName",
                "newCompanyLocationCode",
                "newCompanyName",
                "newDepartmentName",
                "newEmployeeCode",
                "newIdCompany",
                "newIdDepartment",
                "newIdLocation",
                "newIdPosition",
                "newIdSection",
                "newLocationName",
                "newPositionName",
                "newSectionName",
                "oldCompanyLocationCode",
                "oldCompanyName",
                "oldDepartmentName",
                "oldEmployeeCode",
                "oldIdCompany",
                "oldIdDepartment",
                "oldIdPosition",
                "oldIdSection",
                "oldIdlocation",
                "oldLocationName",
                "oldPositionName",
                "oldSectionName",
                "transferCode"
            ],
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "deletedBy": {
                    "type": "string"
                },
                "deletedTime": {
                    "type": "string"
                },
                "employeeCode": {
                    "type": "string"
                },
                "employeeId": {
                    "type": "integer"
                },
                "employeeName": {
                    "type": "string"
                },
                "fingerPrintId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "machineId": {
                    "type": "integer"
                },
                "machineName": {
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedTime": {
                    "type": "string"
                },
                "newCompanyLocationCode": {
                    "type": "string"
                },
                "newCompanyName": {
                    "type": "string"
                },
                "newDepartmentName": {
                    "type": "string"
                },
                "newEmployeeCode": {
                    "type": "string"
                },
                "newIdCompany": {
                    "type": "integer"
                },
                "newIdDepartment": {
                    "type": "integer"
                },
                "newIdLocation": {
                    "type": "integer"
                },
                "newIdPosition": {
                    "type": "integer"
                },
                "newIdSection": {
                    "type": "integer"
                },
                "newLocationName": {
                    "type": "string"
                },
                "newPositionName": {
                    "type": "string"
                },
                "newSectionName": {
                    "type": "string"
                },
                "oldCompanyLocationCode": {
                    "type": "string"
                },
                "oldCompanyName": {
                    "type": "string"
                },
                "oldDepartmentName": {
                    "type": "string"
                },
                "oldEmployeeCode": {
                    "type": "string"
                },
                "oldIdCompany": {
                    "type": "integer"
                },
                "oldIdDepartment": {
                    "type": "integer"
                },
                "oldIdPosition": {
                    "type": "integer"
                },
                "oldIdSection": {
                    "type": "integer"
                },
                "oldIdlocation": {
                    "type": "integer"
                },
                "oldLocationName": {
                    "type": "string"
                },
                "oldPositionName": {
                    "type": "string"
                },
                "oldSectionName": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "transferCode": {
                    "type": "string"
                },
                "transferDate": {
                    "type": "string"
                }
            }
        },
        "Dto.WorkStatusUpdateDTO": {
            "type": "object",
            "required": [
                "id",
                "workStatus",
                "workStatusChangeDate",
                "workStatusChangeReason"
            ],
            "properties": {
                "contractEnd": {
                    "type": "string"
                },
                "contractStart": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedTime": {
                    "type": "string"
                },
                "workStatus": {
                    "type": "string"
                },
                "workStatusChangeDate": {
                    "type": "string"
                },
                "workStatusChangeReason": {
                    "type": "string"
                }
            }
        },
        "Response.RespErrorStruct": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "key": "value",
                        "key2": "value2"
                    }
                },
                "status": {
                    "type": "integer",
                    "example": 400
                },
                "title": {
                    "type": "string",
                    "example": "bad_request"
                }
            }
        },
        "Response.RespResultStruct": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "key": "value",
                        "key2": "value2"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "Header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/employee",
	Schemes:          []string{},
	Title:            "Employee Service",
	Description:      "Example: Bearer abcdefghijklmnopqrstuvwxyz12345678901",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
